version: '3.7'
#This node contains the services with all of the different containers we're orchestrating here.'
services:
  # Below service (name: reverseproxy) is to add the Nginx service. BTW, the service name should be unique.
  # Each service is a container that will run in the compose project, and as such, they'll each have a Dockerfile or image
  # that specifies the container for the service.
  reverseproxy:
    # This "build" node defines how our container should be built.
    build:
      # The "context" is the current solution directory where this YAML file lives.
      context: .
      # The "dockerfile" is the nginx.Dockerfile which is inside "nginx" folder. This will be forwarding traffic
      # to the IdentityServer. So, I want the IdentityServer to be started first so that this reverseproxy can
      # see it when it starts. To do that, we can add a node called "depends_on" like below
      dockerfile: nginx/nginx.Dockerfile
    # We can control the startup order of services with the "depends_on" keyword. For the below case,
    # the "reverseproxy" depends_on "globomantics.identityserver", which means that the "globomantics.identityserver"
    # service is going to be started first.
    depends_on:
      - globomantics.identityserver
    ports:
      # We specify any ports that should be exposed on the host, with the familiar syntax of host port first, followed by
      # the corresponding port on the container.
      # Taken host port 5200 just to be different. And then the container port should be 5100 as it matches the port
      # that Nginx is listening on from the nginx.local.conf file
      # - "5200:5100"
        - "44395:443"

  # This service has been named with the lowercase version of the project name. We could change this name if we wanted to
  globomantics.identityserver:
    # This is the image in use
    image: ${DOCKER_REGISTRY-}globomanticsidentityserver
    # The real meat comes in the build area which defines the context or working directory for the container,
    # and then, the path to the Dockerfile that defines it.
    build:
      context: .
      # This is the path to the Dockerfile that defines it
      dockerfile: Globomantics.IdentityServer/Dockerfile
    # You can specify environment variables in the compose file as well like shown below
    environment:
      # This is to make sure that our Application listens on port 5000 to serve requests.
      - ASPNETCORE_URLS=http://*:5000
    ports:
      # I want the host port to be 5000, and that can map to the container port of 5000 which should be listening
      # for the requests based on the environment variable we set.
      - "5000:5000"

  globoseq: # It's the seq service for our Globomantics application
    image: datalust/seq # Instead of a Dockerfile, provide the image name that will be used for this container
    restart: unless-stopped # This option is to make sure that if something happens to this service, it should be restarted automaically
    ports: # This is how to set port mapping in docker-compose.yml file
      - "5342:80"
    environment: # This is how to set environment variables in docker-compose.yml file
      - ACCEPT_EULA=Y

  globosmtp:
    image: rnwood/smtp4dev
    restart: always
    ports:
      - "5010:80"